{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Shi Yao Chu\\\\Desktop\\\\webdev\\\\react\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shi Yao Chu\\\\desktop\\\\webdev\\\\react\\\\burger-builder\\\\src\\\\containers\\\\builder\\\\builder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/aux';\nimport Burger from '../../components/burger/burger';\nimport Controls from '../../components/burger/controls/controls';\nimport Modal from '../../components/UI/modal/modal';\nimport Summary from '../../components/burger/summary/summary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/spinner/spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionTypes from '../../store/actions';\nconst PRICES = {\n  salad: 0.5,\n  cheese: 1.0,\n  meat: 3.0,\n  bacon: 2.0\n};\n\nclass Builder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      totalPrice: 0,\n      canPurchase: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const count = this.state.ingredients[type] + 1;\n\n      const updatedIng = _objectSpread({}, this.state.ingredients);\n\n      updatedIng[type] = count;\n      const newPrice = this.state.totalPrice + PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIng\n      });\n      this.updateCanPurchase(updatedIng);\n    };\n\n    this.updateCanPurchase = ingredients => {\n      const sum = Object.keys(ingredients).map(key => {\n        return ingredients[key];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        canPurchase: sum > 0\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const count = this.state.ingredients[type] - 1;\n\n      if (count < 0) {\n        return;\n      }\n\n      const updatedIng = _objectSpread({}, this.state.ingredients);\n\n      updatedIng[type] = count;\n      const newPrice = this.state.totalPrice - PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIng\n      });\n      this.updateCanPurchase(updatedIng);\n    };\n\n    this.closeModalHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.continuePurchaseHandler = () => {\n      console.log(\"continuePurchaseHandler called in builder.js\");\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + this.state.totalPrice);\n      const query = queryParams.join('&');\n      this.props.history.push({\n        pathname: \"/checkout\",\n        search: '?' + query\n      });\n    };\n  }\n\n  componentDidMount() {\n    /*axios.get('https://burger-builder-ea013.firebaseio.com/ingredients.json')\r\n        .then(res => {\r\n            this.setState({ingredients: res.data});\r\n        }).catch(err => {\r\n            this.setState({error: true});\r\n        });*/\n  }\n\n  render() {\n    const disabled = _objectSpread({}, this.props.ings);\n\n    for (let key in disabled) {\n      disabled[key] = disabled[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Ingredients cannot be loaded\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    });\n\n    if (this.props.ings != null) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(Controls, {\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice,\n        addIng: this.props.onIngredientAdded,\n        remIng: this.props.onIngredientRemoved,\n        disabled: disabled,\n        canPurchase: this.state.canPurchase,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(Summary, {\n        ingredients: this.props.ings,\n        canceled: this.closeModalHandler,\n        continued: this.continuePurchaseHandler,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      });\n\n      if (this.state.loading) {\n        orderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        });\n      }\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      closeModal: this.closeModalHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch({\n      type: actionTypes.ADD_INGREDIENT,\n      ingredientName: ingName\n    }),\n    onIngredientRemoved: ingName => dispatch({\n      type: actionTypes.REMOVE_INGREDIENT,\n      ingredientName: ingName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Builder, axios));","map":{"version":3,"sources":["C:\\Users\\Shi Yao Chu\\desktop\\webdev\\react\\burger-builder\\src\\containers\\builder\\builder.js"],"names":["React","Component","connect","Aux","Burger","Controls","Modal","Summary","axios","Spinner","withErrorHandler","actionTypes","PRICES","salad","cheese","meat","bacon","Builder","state","totalPrice","canPurchase","purchasing","loading","error","purchaseHandler","setState","addIngredientHandler","type","count","ingredients","updatedIng","newPrice","updateCanPurchase","sum","Object","keys","map","key","reduce","el","removeIngredientHandler","closeModalHandler","continuePurchaseHandler","console","log","queryParams","i","push","encodeURIComponent","query","join","props","history","pathname","search","componentDidMount","render","disabled","ings","orderSummary","burger","onIngredientAdded","onIngredientRemoved","mapStateToProps","mapDispatchToProps","dispatch","ingName","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,QAAP,MAAqB,2CAArB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,OAAP,MAAoB,yCAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE,GADI;AAEXC,EAAAA,MAAM,EAAE,GAFG;AAGXC,EAAAA,IAAI,EAAE,GAHK;AAIXC,EAAAA,KAAK,EAAE;AAJI,CAAf;;AAOA,MAAMC,OAAN,SAAsBhB,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BiB,KAD4B,GACpB;AACJC,MAAAA,UAAU,EAAE,CADR;AAEJC,MAAAA,WAAW,EAAE,KAFT;AAGJC,MAAAA,UAAU,EAAE,KAHR;AAIJC,MAAAA,OAAO,EAAE,KAJL;AAKJC,MAAAA,KAAK,EAAE;AALH,KADoB;;AAAA,SAkB5BC,eAlB4B,GAkBV,MAAM;AACpB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,UAAU,EAAE;AADF,OAAd;AAGH,KAtB2B;;AAAA,SAwB5BK,oBAxB4B,GAwBJC,IAAD,IAAU;AAC7B,YAAMC,KAAK,GAAG,KAAKV,KAAL,CAAWW,WAAX,CAAuBF,IAAvB,IAA+B,CAA7C;;AACA,YAAMG,UAAU,qBACT,KAAKZ,KAAL,CAAWW,WADF,CAAhB;;AAGAC,MAAAA,UAAU,CAACH,IAAD,CAAV,GAAmBC,KAAnB;AACA,YAAMG,QAAQ,GAAG,KAAKb,KAAL,CAAWC,UAAX,GAAwBP,MAAM,CAACe,IAAD,CAA/C;AACA,WAAKF,QAAL,CAAc;AACVN,QAAAA,UAAU,EAAEY,QADF;AAEVF,QAAAA,WAAW,EAAEC;AAFH,OAAd;AAIA,WAAKE,iBAAL,CAAuBF,UAAvB;AACH,KApC2B;;AAAA,SAsC5BE,iBAtC4B,GAsCPH,WAAD,IAAiB;AACjC,YAAMI,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYN,WAAZ,EACXO,GADW,CACNC,GAAD,IAAS;AACV,eAAOR,WAAW,CAACQ,GAAD,CAAlB;AACH,OAHW,EAGTC,MAHS,CAGF,CAACL,GAAD,EAAMM,EAAN,KAAa;AACnB,eAAON,GAAG,GAAGM,EAAb;AACH,OALW,EAKT,CALS,CAAZ;AAMA,WAAKd,QAAL,CAAc;AAACL,QAAAA,WAAW,EAAEa,GAAG,GAAG;AAApB,OAAd;AACH,KA9C2B;;AAAA,SAgD5BO,uBAhD4B,GAgDDb,IAAD,IAAU;AAChC,YAAMC,KAAK,GAAG,KAAKV,KAAL,CAAWW,WAAX,CAAuBF,IAAvB,IAA+B,CAA7C;;AACA,UAAGC,KAAK,GAAG,CAAX,EAAa;AACT;AACH;;AACD,YAAME,UAAU,qBACT,KAAKZ,KAAL,CAAWW,WADF,CAAhB;;AAGAC,MAAAA,UAAU,CAACH,IAAD,CAAV,GAAmBC,KAAnB;AACA,YAAMG,QAAQ,GAAG,KAAKb,KAAL,CAAWC,UAAX,GAAwBP,MAAM,CAACe,IAAD,CAA/C;AACA,WAAKF,QAAL,CAAc;AACVN,QAAAA,UAAU,EAAEY,QADF;AAEVF,QAAAA,WAAW,EAAEC;AAFH,OAAd;AAIA,WAAKE,iBAAL,CAAuBF,UAAvB;AACH,KA/D2B;;AAAA,SAkE5BW,iBAlE4B,GAkER,MAAM;AACtB,WAAKhB,QAAL,CAAc;AAACJ,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH,KApE2B;;AAAA,SAsE5BqB,uBAtE4B,GAsEF,MAAM;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACA,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAI,IAAIC,CAAR,IAAa,KAAK5B,KAAL,CAAWW,WAAxB,EAAoC;AAChCgB,QAAAA,WAAW,CAACE,IAAZ,CAAiBC,kBAAkB,CAACF,CAAD,CAAlB,GAAwB,GAAxB,GAA8BE,kBAAkB,CAAC,KAAK9B,KAAL,CAAWW,WAAX,CAAuBiB,CAAvB,CAAD,CAAjE;AACH;;AACDD,MAAAA,WAAW,CAACE,IAAZ,CAAiB,WAAW,KAAK7B,KAAL,CAAWC,UAAvC;AACA,YAAM8B,KAAK,GAAGJ,WAAW,CAACK,IAAZ,CAAiB,GAAjB,CAAd;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBL,IAAnB,CAAwB;AACpBM,QAAAA,QAAQ,EAAE,WADU;AAEpBC,QAAAA,MAAM,EAAE,MAAML;AAFM,OAAxB;AAIH,KAlF2B;AAAA;;AAS5BM,EAAAA,iBAAiB,GAAG;AAChB;;;;;;AAMH;;AAoEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,qBACP,KAAKN,KAAL,CAAWO,IADJ,CAAd;;AAGA,SAAI,IAAIrB,GAAR,IAAeoB,QAAf,EAAwB;AACpBA,MAAAA,QAAQ,CAACpB,GAAD,CAAR,GAAgBoB,QAAQ,CAACpB,GAAD,CAAR,IAAiB,CAAjC;AACH;;AACD,QAAIsB,YAAY,GAAG,IAAnB;AACA,QAAIC,MAAM,GAAG,KAAK1C,KAAL,CAAWK,KAAX,GAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAnB,GAAyD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtE;;AACA,QAAG,KAAK4B,KAAL,CAAWO,IAAX,IAAmB,IAAtB,EAA2B;AACvBE,MAAAA,MAAM,GACF,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKT,KAAL,CAAWO,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKlC,eAAxB;AAAyC,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,UAA3D;AACA,QAAA,MAAM,EAAE,KAAKgC,KAAL,CAAWU,iBADnB;AACsC,QAAA,MAAM,EAAE,KAAKV,KAAL,CAAWW,mBADzD;AAEA,QAAA,QAAQ,EAAEL,QAFV;AAEoB,QAAA,WAAW,EAAE,KAAKvC,KAAL,CAAWE,WAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAQAuC,MAAAA,YAAY,GAAG,oBAAC,OAAD;AAAS,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWO,IAAjC;AAAuC,QAAA,QAAQ,EAAE,KAAKjB,iBAAtD;AACf,QAAA,SAAS,EAAE,KAAKC,uBADD;AAC0B,QAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWC,UAD5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;;AAEA,UAAG,KAAKD,KAAL,CAAWI,OAAd,EAAsB;AAClBqC,QAAAA,YAAY,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AACH;AACJ;;AACD,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKzC,KAAL,CAAWG,UAAxB;AAAoC,MAAA,UAAU,EAAE,KAAKoB,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKkB,YADL,CADJ,EAIKC,MAJL,CADJ;AAQH;;AApH2B;;AAuHhC,MAAMG,eAAe,GAAI7C,KAAD,IAAW;AAC/B,SAAO;AACHwC,IAAAA,IAAI,EAAExC,KAAK,CAACW;AADT,GAAP;AAGH,CAJD;;AAMA,MAAMmC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHJ,IAAAA,iBAAiB,EAAGK,OAAD,IAAaD,QAAQ,CAAC;AAACtC,MAAAA,IAAI,EAAEhB,WAAW,CAACwD,cAAnB;AACrCC,MAAAA,cAAc,EAAEF;AADqB,KAAD,CADrC;AAGHJ,IAAAA,mBAAmB,EAAGI,OAAD,IAAaD,QAAQ,CAAC;AAACtC,MAAAA,IAAI,EAAEhB,WAAW,CAAC0D,iBAAnB;AACvCD,MAAAA,cAAc,EAAEF;AADuB,KAAD;AAHvC,GAAP;AAMH,CAPD;;AASA,eAAehE,OAAO,CAAC6D,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CtD,gBAAgB,CAACO,OAAD,EAAST,KAAT,CAA5D,CAAf","sourcesContent":["import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/aux';\r\nimport Burger from '../../components/burger/burger';\r\nimport Controls from '../../components/burger/controls/controls';\r\nimport Modal from '../../components/UI/modal/modal';\r\nimport Summary from '../../components/burger/summary/summary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/spinner/spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actionTypes from '../../store/actions';\r\n\r\nconst PRICES = {\r\n    salad: 0.5,\r\n    cheese: 1.0,\r\n    meat: 3.0,\r\n    bacon: 2.0\r\n}\r\n\r\nclass Builder extends Component {\r\n    state = {\r\n        totalPrice: 0,\r\n        canPurchase: false,\r\n        purchasing: false,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*axios.get('https://burger-builder-ea013.firebaseio.com/ingredients.json')\r\n            .then(res => {\r\n                this.setState({ingredients: res.data});\r\n            }).catch(err => {\r\n                this.setState({error: true});\r\n            });*/\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({\r\n            purchasing: true\r\n        });\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const count = this.state.ingredients[type] + 1;\r\n        const updatedIng = {\r\n            ...this.state.ingredients,\r\n        };\r\n        updatedIng[type] = count;\r\n        const newPrice = this.state.totalPrice + PRICES[type]\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIng\r\n        });\r\n        this.updateCanPurchase(updatedIng);\r\n    }\r\n\r\n    updateCanPurchase = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n        .map((key) => {\r\n            return ingredients[key];\r\n        }).reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        this.setState({canPurchase: sum > 0});\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const count = this.state.ingredients[type] - 1;\r\n        if(count < 0){\r\n            return;\r\n        }\r\n        const updatedIng = {\r\n            ...this.state.ingredients,\r\n        };\r\n        updatedIng[type] = count;\r\n        const newPrice = this.state.totalPrice - PRICES[type]\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIng\r\n        });\r\n        this.updateCanPurchase(updatedIng);\r\n    }\r\n\r\n    //use this to cancel purchases in general\r\n    closeModalHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    continuePurchaseHandler = () => {\r\n        console.log(\"continuePurchaseHandler called in builder.js\");\r\n        const queryParams = [];\r\n        for(let i in this.state.ingredients){\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice);\r\n        const query = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: \"/checkout\",\r\n            search: '?' + query\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const disabled = {\r\n            ...this.props.ings\r\n        }\r\n        for(let key in disabled){\r\n            disabled[key] = disabled[key] <= 0;\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.state.error ? <p>Ingredients cannot be loaded</p> : <Spinner/>\r\n        if(this.props.ings != null){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <Controls ordered={this.purchaseHandler} price={this.state.totalPrice} \r\n                    addIng={this.props.onIngredientAdded} remIng={this.props.onIngredientRemoved}\r\n                    disabled={disabled} canPurchase={this.state.canPurchase}/>\r\n                </Aux>\r\n            );\r\n            orderSummary = <Summary ingredients={this.props.ings} canceled={this.closeModalHandler}\r\n            continued={this.continuePurchaseHandler} price={this.state.totalPrice}/>;\r\n            if(this.state.loading){\r\n                orderSummary = <Spinner/>;\r\n            }\r\n        }\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} closeModal={this.closeModalHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.ingredients\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENT, \r\n            ingredientName: ingName}),\r\n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENT,\r\n            ingredientName: ingName})\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Builder,axios));"]},"metadata":{},"sourceType":"module"}