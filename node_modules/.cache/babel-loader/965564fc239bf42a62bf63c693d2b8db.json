{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shi Yao Chu\\\\desktop\\\\webdev\\\\react\\\\burger-builder\\\\src\\\\containers\\\\orders\\\\Orders.js\";\nimport React, { Component } from 'react';\nimport Order from '../../components/order/order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\nimport Spinner from '../../components/UI/spinner/spinner';\n\nclass Orders extends Component {\n  componentDidMount() {\n    /*axios.get('/orders.json')\r\n    .then(res => {\r\n        const fetched = [];\r\n        for (let key in res.data) {\r\n            fetched.push({\r\n                ...res.data[key],\r\n                id: key\r\n            });\r\n        }\r\n        this.setState({\r\n            loading: false,\r\n            orders: fetched\r\n        })\r\n    })\r\n    .catch(res => {\r\n        this.setState({\r\n            loading: false\r\n        })\r\n    }); ==> moved to redux */\n    this.props.onFetchOrders();\n  }\n\n  render() {\n    const orders = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => React.createElement(Order, {\n        key: order.id,\n        ingredients: order.ingredients,\n        price: order.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, orders);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["C:\\Users\\Shi Yao Chu\\desktop\\webdev\\react\\burger-builder\\src\\containers\\orders\\Orders.js"],"names":["React","Component","Order","axios","withErrorHandler","actions","connect","Spinner","Orders","componentDidMount","props","onFetchOrders","render","orders","loading","map","order","id","ingredients","price","mapStateToProps","state","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AAEA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC3BQ,EAAAA,iBAAiB,GAAE;AACf;;;;;;;;;;;;;;;;;;;AAmBA,SAAKC,KAAL,CAAWC,aAAX;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAMC,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;;AACA,QAAG,CAAC,KAAKH,KAAL,CAAWI,OAAf,EAAuB;AACnBD,MAAAA,MAAM,GAAG,KAAKH,KAAL,CAAWG,MAAX,CAAkBE,GAAlB,CAAsBC,KAAK,IAChC,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,QAAA,WAAW,EAAED,KAAK,CAACE,WAAzC;AAAsD,QAAA,KAAK,EAAEF,KAAK,CAACG,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,CAAT;AAGH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,MADL,CADJ;AAKH;;AApC0B;;AAuC/B,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,MAAM,EAAEQ,KAAK,CAACL,KAAN,CAAYH,MADjB;AAEHC,IAAAA,OAAO,EAAEO,KAAK,CAACL,KAAN,CAAYF;AAFlB,GAAP;AAIH,CALD;;AAOA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHZ,IAAAA,aAAa,EAAE,MAAMY,QAAQ,CAAClB,OAAO,CAACmB,WAAR,EAAD;AAD1B,GAAP;AAGH,CAJD;;AAMA,eAAelB,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,gBAAgB,CAACI,MAAD,EAASL,KAAT,CAA7D,CAAf","sourcesContent":["import React , {Component} from 'react';\r\n\r\nimport Order from '../../components/order/order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/spinner/spinner';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount(){\r\n        /*axios.get('/orders.json')\r\n        .then(res => {\r\n            const fetched = [];\r\n            for (let key in res.data) {\r\n                fetched.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            this.setState({\r\n                loading: false,\r\n                orders: fetched\r\n            })\r\n        })\r\n        .catch(res => {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }); ==> moved to redux */\r\n        this.props.onFetchOrders()\r\n    }\r\n\r\n    render(){\r\n        const orders = <Spinner/>;\r\n        if(!this.props.loading){\r\n            orders = this.props.orders.map(order => (\r\n                <Order key={order.id} ingredients={order.ingredients} price={order.price} />\r\n            ))\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchOrders: () => dispatch(actions.fetchOrders())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"]},"metadata":{},"sourceType":"module"}