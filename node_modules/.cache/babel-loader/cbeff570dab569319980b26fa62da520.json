{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shi Yao Chu\\\\desktop\\\\webdev\\\\react\\\\burger-builder\\\\src\\\\containers\\\\checkout\\\\contactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport styles from './contactData.module.css';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/spinner/spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      address: {\n        street: '',\n        postal: ''\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      const ing = this.props.ings; //alert('you continue!');\n      //.json is for firebase only\n      //price should actually be calculated on the server\n      //this.setState({loading: true});\n\n      const order = {\n        ingredients: ing,\n        price: this.props.price,\n        customer: {\n          name: 'Steven',\n          address: '10 Winner Street'\n        }\n        /*axios.post('/orders.json', order)\r\n            .then(res => {\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({\r\n                    loading:false,\r\n                });\r\n            });*/\n\n      };\n    };\n  }\n\n  render() {\n    let form = React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: styles.Input,\n      type: \"text\",\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: styles.Input,\n      type: \"email\",\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"Success\",\n      clicked: this.orderHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Order Here\"));\n\n    if (this.state.loading) {\n      form = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: styles.ContactData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Enter your data\"), form);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nconst mapDispatchToProps = state => {\n  onOrderBurger: () => {\n    purchase;\n  };\n};\n\nexport default connect(mapStateToProps, null)(withErrorHandler(ContactData, axios));","map":{"version":3,"sources":["C:\\Users\\Shi Yao Chu\\desktop\\webdev\\react\\burger-builder\\src\\containers\\checkout\\contactData.js"],"names":["React","Component","Button","styles","axios","Spinner","withErrorHandler","connect","actions","ContactData","state","name","email","address","street","postal","loading","orderHandler","event","preventDefault","ing","props","ings","order","ingredients","price","customer","render","form","Input","mapStateToProps","totalPrice","mapDispatchToProps","onOrderBurger","purchase"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AAEA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCS,KADgC,GACxB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,EADH;AAELC,QAAAA,MAAM,EAAE;AAFH,OAHL;AAOJC,MAAAA,OAAO,EAAE;AAPL,KADwB;;AAAA,SAWhCC,YAXgC,GAWhBC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,GAAG,GAAG,KAAKC,KAAL,CAAWC,IAAvB,CAFsB,CAItB;AACA;AACA;AACA;;AACA,YAAMC,KAAK,GAAG;AACVC,QAAAA,WAAW,EAAEJ,GADH;AAEVK,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,KAFR;AAGVC,QAAAA,QAAQ,EAAE;AACNf,UAAAA,IAAI,EAAE,QADA;AAENE,UAAAA,OAAO,EAAE;AAFH;AAKd;;;;;;;;;;;;;;AARc,OAAd;AAqBH,KAxC+B;AAAA;;AA0ChCc,EAAAA,MAAM,GAAE;AACJ,QAAIC,IAAI,GACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,KAAzB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,IAAI,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,SAAS,EAAE1B,MAAM,CAAC0B,KAAzB;AAAgC,MAAA,IAAI,EAAC,OAArC;AAA6C,MAAA,IAAI,EAAC,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKZ,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADJ;;AAOA,QAAG,KAAKP,KAAL,CAAWM,OAAd,EAAsB;AAClBY,MAAAA,IAAI,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,WACI;AAAK,MAAA,SAAS,EAAEzB,MAAM,CAACM,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEKmB,IAFL,CADJ;AAMH;;AA3D+B;;AA8DpC,MAAME,eAAe,GAAIpB,KAAD,IAAW;AAC/B,SAAO;AACHY,IAAAA,IAAI,EAAEZ,KAAK,CAACc,WADT;AAEHC,IAAAA,KAAK,EAAEf,KAAK,CAACqB;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAItB,KAAD,IAAW;AAClCuB,EAAAA,aAAa,EAAE,MAAM;AACjBC,IAAAA,QAAQ;AACX,GAFc;AAGlB,CAJD;;AAMA,eAAe3B,OAAO,CAACuB,eAAD,EAAiB,IAAjB,CAAP,CAA8BxB,gBAAgB,CAACG,WAAD,EAAaL,KAAb,CAA9C,CAAf","sourcesContent":["import React , { Component } from 'react';\r\n\r\nimport Button from '../../components/UI/Button/Button';\r\nimport styles from './contactData.module.css';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/spinner/spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        address: {\r\n            street: '',\r\n            postal: ''\r\n        },\r\n        loading: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const ing = this.props.ings;\r\n\r\n        //alert('you continue!');\r\n        //.json is for firebase only\r\n        //price should actually be calculated on the server\r\n        //this.setState({loading: true});\r\n        const order = {\r\n            ingredients: ing,\r\n            price: this.props.price,\r\n            customer: {\r\n                name: 'Steven',\r\n                address: '10 Winner Street'\r\n            }\r\n        }\r\n        /*axios.post('/orders.json', order)\r\n            .then(res => {\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({\r\n                    loading:false,\r\n                });\r\n            });*/\r\n    }\r\n\r\n    render(){\r\n        let form = (\r\n            <form>\r\n                <input className={styles.Input} type='text' name='name'/>\r\n                <input className={styles.Input} type='email' name='email'/>\r\n                <Button type='Success' clicked={this.orderHandler}>Order Here</Button>\r\n            </form>\r\n        );\r\n        if(this.state.loading){\r\n            form = <Spinner/>\r\n        }\r\n        return (\r\n            <div className={styles.ContactData}>\r\n                <h4>Enter your data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.ingredients,\r\n        price: state.totalPrice\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (state) => {\r\n    onOrderBurger: () => {\r\n        purchase\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,null)(withErrorHandler(ContactData,axios));"]},"metadata":{},"sourceType":"module"}