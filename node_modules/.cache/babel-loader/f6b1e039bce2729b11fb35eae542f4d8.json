{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Shi Yao Chu\\\\Desktop\\\\webdev\\\\react\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shi Yao Chu\\\\desktop\\\\webdev\\\\react\\\\burger-builder\\\\src\\\\containers\\\\builder\\\\builder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/aux';\nimport Burger from '../../components/burger/burger';\nimport Controls from '../../components/burger/controls/controls';\nimport Modal from '../../components/UI/modal/modal';\nimport Summary from '../../components/burger/summary/summary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/spinner/spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst PRICES = {\n  salad: 0.5,\n  cheese: 1.0,\n  meat: 3.0,\n  bacon: 2.0\n};\n\nclass Builder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 0,\n      canPurchase: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const count = this.state.ingredients[type] + 1;\n\n      const updatedIng = _objectSpread({}, this.state.ingredients);\n\n      updatedIng[type] = count;\n      const newPrice = this.state.totalPrice + PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIng\n      });\n      this.updateCanPurchase(updatedIng);\n    };\n\n    this.updateCanPurchase = ingredients => {\n      const sum = Object.keys(ingredients).map(key => {\n        return ingredients[key];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        canPurchase: sum > 0\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const count = this.state.ingredients[type] - 1;\n\n      if (count < 0) {\n        return;\n      }\n\n      const updatedIng = _objectSpread({}, this.state.ingredients);\n\n      updatedIng[type] = count;\n      const newPrice = this.state.totalPrice - PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIng\n      });\n      this.updateCanPurchase(updatedIng);\n    };\n\n    this.closeModalHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.continuePurchaseHandler = () => {\n      //alert('you continue!');\n      //.json is for firebase only\n      //price should actually be calculated on the server\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.price,\n        customer: {\n          name: 'Steven',\n          address: '10 Winner Street'\n        }\n      };\n      axios.post('/orders.json', order).then(res => {\n        console.log(res);\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://burger-builder-ea013.firebaseio.com/ingredients.json').then(res => {\n      this.setState({\n        ingredients: res.data\n      });\n    }).catch(err => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  render() {\n    const disabled = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabled) {\n      disabled[key] = disabled[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    });\n\n    if (this.state.ingredients != null) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Controls, {\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice,\n        addIng: this.addIngredientHandler,\n        remIng: this.removeIngredientHandler,\n        disabled: disabled,\n        canPurchase: this.state.canPurchase,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(Summary, {\n        ingredients: this.state.ingredients,\n        canceled: this.closeModalHandler,\n        continued: this.continuePurchaseHandler,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      });\n\n      if (this.state.loading) {\n        orderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        });\n      }\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      closeModal: this.closeModalHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(Builder, axios);","map":{"version":3,"sources":["C:\\Users\\Shi Yao Chu\\desktop\\webdev\\react\\burger-builder\\src\\containers\\builder\\builder.js"],"names":["React","Component","Aux","Burger","Controls","Modal","Summary","axios","Spinner","withErrorHandler","PRICES","salad","cheese","meat","bacon","Builder","state","ingredients","totalPrice","canPurchase","purchasing","loading","error","purchaseHandler","setState","addIngredientHandler","type","count","updatedIng","newPrice","updateCanPurchase","sum","Object","keys","map","key","reduce","el","removeIngredientHandler","closeModalHandler","continuePurchaseHandler","order","price","customer","name","address","post","then","res","console","log","catch","componentDidMount","get","data","err","render","disabled","orderSummary","burger"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\r\n\r\nimport Aux from '../../hoc/aux';\r\nimport Burger from '../../components/burger/burger';\r\nimport Controls from '../../components/burger/controls/controls';\r\nimport Modal from '../../components/UI/modal/modal';\r\nimport Summary from '../../components/burger/summary/summary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/spinner/spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nconst PRICES = {\r\n    salad: 0.5,\r\n    cheese: 1.0,\r\n    meat: 3.0,\r\n    bacon: 2.0\r\n}\r\n\r\nclass Builder extends Component {\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 0,\r\n        canPurchase: false,\r\n        purchasing: false,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://burger-builder-ea013.firebaseio.com/ingredients.json')\r\n            .then(res => {\r\n                this.setState({ingredients: res.data});\r\n            }).catch(err => {\r\n                this.setState({error: true});\r\n            });\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({\r\n            purchasing: true\r\n        });\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const count = this.state.ingredients[type] + 1;\r\n        const updatedIng = {\r\n            ...this.state.ingredients,\r\n        };\r\n        updatedIng[type] = count;\r\n        const newPrice = this.state.totalPrice + PRICES[type]\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIng\r\n        });\r\n        this.updateCanPurchase(updatedIng);\r\n    }\r\n\r\n    updateCanPurchase = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n        .map((key) => {\r\n            return ingredients[key];\r\n        }).reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        this.setState({canPurchase: sum > 0});\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const count = this.state.ingredients[type] - 1;\r\n        if(count < 0){\r\n            return;\r\n        }\r\n        const updatedIng = {\r\n            ...this.state.ingredients,\r\n        };\r\n        updatedIng[type] = count;\r\n        const newPrice = this.state.totalPrice - PRICES[type]\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIng\r\n        });\r\n        this.updateCanPurchase(updatedIng);\r\n    }\r\n\r\n    //use this to cancel purchases in general\r\n    closeModalHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    continuePurchaseHandler = () => {\r\n        //alert('you continue!');\r\n        //.json is for firebase only\r\n        //price should actually be calculated on the server\r\n        this.setState({loading: true});\r\n        const order = {\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.price,\r\n            customer: {\r\n                name: 'Steven',\r\n                address: '10 Winner Street'\r\n            }\r\n        }\r\n        axios.post('/orders.json', order)\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    loading: false,\r\n                    purchasing: false\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({\r\n                    loading:false,\r\n                    purchasing: false\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const disabled = {\r\n            ...this.state.ingredients\r\n        }\r\n        for(let key in disabled){\r\n            disabled[key] = disabled[key] <= 0;\r\n        }\r\n        let orderSummary = null;\r\n        let burger = <Spinner/>\r\n        if(this.state.ingredients != null){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.state.ingredients}/>\r\n                    <Controls ordered={this.purchaseHandler} price={this.state.totalPrice} \r\n                    addIng={this.addIngredientHandler} remIng={this.removeIngredientHandler}\r\n                    disabled={disabled} canPurchase={this.state.canPurchase}/>\r\n                </Aux>\r\n            );\r\n            orderSummary = <Summary ingredients={this.state.ingredients} canceled={this.closeModalHandler}\r\n            continued={this.continuePurchaseHandler} price={this.state.totalPrice}/>;\r\n            if(this.state.loading){\r\n                orderSummary = <Spinner/>;\r\n            }\r\n        }\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} closeModal={this.closeModalHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Builder,axios);"]},"metadata":{},"sourceType":"module"}