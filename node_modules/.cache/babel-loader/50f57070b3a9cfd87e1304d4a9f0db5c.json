{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Shi Yao Chu\\\\Desktop\\\\webdev\\\\react\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 0,\n  error: false\n};\nconst PRICES = {\n  salad: 0.5,\n  cheese: 1.0,\n  meat: 3.0,\n  bacon: 2.0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, {\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        }),\n        totalPrice: state.totalPrice + PRICES[action.ingredientName]\n      });\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, {\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        }),\n        totalPrice: state.totalPrice + PRICES[action.ingredientName]\n      });\n\n    case actionTypes.SET_INGREDIENTS:\n      return _objectSpread({}, state, {\n        ingredients: action.ingredients,\n        error: false,\n        totalPrice: 0\n      });\n\n    case actionTypes.FETCH_FAILED:\n      return _objectSpread({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\Shi Yao Chu\\desktop\\webdev\\react\\burger-builder\\src\\store\\reducers\\burgerBuilder.js"],"names":["actionTypes","initialState","ingredients","totalPrice","error","PRICES","salad","cheese","meat","bacon","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_FAILED"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,MAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE,GADI;AAEXC,EAAAA,MAAM,EAAE,GAFG;AAGXC,EAAAA,IAAI,EAAE,GAHK;AAIXC,EAAAA,KAAK,EAAE;AAJI,CAAf;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,WAAW,CAACc,cAAjB;AACI,+BACOH,KADP;AAEIT,QAAAA,WAAW,oBACJS,KAAK,CAACT,WADF;AAEP,WAACU,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C;AAF7D,UAFf;AAMIZ,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,MAAM,CAACO,MAAM,CAACG,cAAR;AANzC;;AAQJ,SAAKf,WAAW,CAACgB,iBAAjB;AACI,+BACOL,KADP;AAEIT,QAAAA,WAAW,oBACJS,KAAK,CAACT,WADF;AAEP,WAACU,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C;AAF7D,UAFf;AAMIZ,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,MAAM,CAACO,MAAM,CAACG,cAAR;AANzC;;AAQJ,SAAKf,WAAW,CAACiB,eAAjB;AACI,+BACON,KADP;AAEIT,QAAAA,WAAW,EAAEU,MAAM,CAACV,WAFxB;AAGIE,QAAAA,KAAK,EAAE,KAHX;AAIID,QAAAA,UAAU,EAAE;AAJhB;;AAMJ,SAAKH,WAAW,CAACkB,YAAjB;AACI,+BACOP,KADP;AAEIP,QAAAA,KAAK,EAAE;AAFX;;AAIJ;AACI,aAAOO,KAAP;AAhCR;AAkCH,CAnCD;;AAqCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 0,\r\n    error: false\r\n};\r\n\r\nconst PRICES = {\r\n    salad: 0.5,\r\n    cheese: 1.0,\r\n    meat: 3.0,\r\n    bacon: 2.0\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + PRICES[action.ingredientName]\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice + PRICES[action.ingredientName]\r\n            };\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: action.ingredients,\r\n                error: false,\r\n                totalPrice: 0\r\n            };\r\n        case actionTypes.FETCH_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}