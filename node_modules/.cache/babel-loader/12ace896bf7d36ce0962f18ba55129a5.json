{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Shi Yao Chu\\\\Desktop\\\\webdev\\\\react\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shi Yao Chu\\\\desktop\\\\webdev\\\\react\\\\burger-builder\\\\src\\\\containers\\\\builder\\\\builder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/aux';\nimport Burger from '../../components/burger/burger';\nimport Controls from '../../components/burger/controls/controls';\nimport Modal from '../../components/UI/modal/modal';\nimport Summary from '../../components/burger/summary/summary';\nimport Spinner from '../../components/UI/spinner/spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as burgerBuilderActions from '../../store/actions/index';\nimport axios from '../../axios-orders';\n\nclass Builder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchasing: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.updateCanPurchase = ingredients => {\n      const sum = Object.keys(ingredients).map(key => {\n        return ingredients[key];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0); //this.setState({canPurchase: sum > 0});\n\n      return sum > 0;\n    };\n\n    this.closeModalHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.continuePurchaseHandler = () => {\n      this.props.onInitPurchase();\n      this.props.history.push({\n        pathname: \"/checkout\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    /*axios.get('https://burger-builder-ea013.firebaseio.com/ingredients.json')\r\n        .then(res => {\r\n            this.setState({ingredients: res.data});\r\n        }).catch(err => {\r\n            this.setState({error: true});\r\n        });*/\n    this.props.onInitIngredients();\n  }\n\n  render() {\n    const disabled = _objectSpread({}, this.props.ings);\n\n    for (let key in disabled) {\n      disabled[key] = disabled[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.props.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Ingredients cannot be loaded\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    });\n\n    if (this.props.ings != null) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Controls, {\n        ordered: this.purchaseHandler,\n        price: this.props.price,\n        addIng: this.props.onIngredientAdded,\n        remIng: this.props.onIngredientRemoved,\n        disabled: disabled,\n        canPurchase: this.updateCanPurchase(this.props.ings),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(Summary, {\n        ingredients: this.props.ings,\n        canceled: this.closeModalHandler,\n        continued: this.continuePurchaseHandler,\n        price: this.props.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      closeModal: this.closeModalHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilderReducer.ingredients,\n    price: state.burgerBuilderReducer.totalPrice,\n    error: state.burgerBuilderReducer.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(burgerBuilderActions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(burgerBuilderActions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(burgerBuilderActions.fetchIngredients()),\n    onInitPurchase: () => dispatch(burgerBuilderActions.purchaseInit())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Builder, axios));","map":{"version":3,"sources":["C:\\Users\\Shi Yao Chu\\desktop\\webdev\\react\\burger-builder\\src\\containers\\builder\\builder.js"],"names":["React","Component","connect","Aux","Burger","Controls","Modal","Summary","Spinner","withErrorHandler","burgerBuilderActions","axios","Builder","state","purchasing","purchaseHandler","setState","updateCanPurchase","ingredients","sum","Object","keys","map","key","reduce","el","closeModalHandler","continuePurchaseHandler","props","onInitPurchase","history","push","pathname","componentDidMount","onInitIngredients","render","disabled","ings","orderSummary","burger","error","price","onIngredientAdded","onIngredientRemoved","mapStateToProps","burgerBuilderReducer","totalPrice","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","fetchIngredients","purchaseInit"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/aux';\r\nimport Burger from '../../components/burger/burger';\r\nimport Controls from '../../components/burger/controls/controls';\r\nimport Modal from '../../components/UI/modal/modal';\r\nimport Summary from '../../components/burger/summary/summary';\r\nimport Spinner from '../../components/UI/spinner/spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as burgerBuilderActions from '../../store/actions/index';\r\nimport axios from '../../axios-orders';\r\n\r\nclass Builder extends Component {\r\n\r\n    //local state manages UI state, keep other info in redux\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*axios.get('https://burger-builder-ea013.firebaseio.com/ingredients.json')\r\n            .then(res => {\r\n                this.setState({ingredients: res.data});\r\n            }).catch(err => {\r\n                this.setState({error: true});\r\n            });*/\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({\r\n            purchasing: true\r\n        });\r\n    }\r\n\r\n    /*addIngredientHandler = (type) => {\r\n        const count = this.state.ingredients[type] + 1;\r\n        const updatedIng = {\r\n            ...this.state.ingredients,\r\n        };\r\n        updatedIng[type] = count;\r\n        const newPrice = this.state.totalPrice + PRICES[type]\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIng\r\n        });\r\n        this.updateCanPurchase(updatedIng);\r\n    }*/\r\n\r\n    updateCanPurchase = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n        .map((key) => {\r\n            return ingredients[key];\r\n        }).reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        //this.setState({canPurchase: sum > 0});\r\n        return sum > 0;\r\n    }\r\n\r\n    /*removeIngredientHandler = (type) => {\r\n        const count = this.state.ingredients[type] - 1;\r\n        if(count < 0){\r\n            return;\r\n        }\r\n        const updatedIng = {\r\n            ...this.state.ingredients,\r\n        };\r\n        updatedIng[type] = count;\r\n        const newPrice = this.state.totalPrice - PRICES[type]\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIng\r\n        });\r\n        this.updateCanPurchase(updatedIng);\r\n    }*/\r\n\r\n    //use this to cancel purchases in general\r\n    closeModalHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    continuePurchaseHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push({\r\n            pathname: \"/checkout\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const disabled = {\r\n            ...this.props.ings\r\n        }\r\n        for(let key in disabled){\r\n            disabled[key] = disabled[key] <= 0;\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients cannot be loaded</p> : <Spinner/>\r\n        if(this.props.ings != null){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <Controls ordered={this.purchaseHandler} price={this.props.price} \r\n                    addIng={this.props.onIngredientAdded} remIng={this.props.onIngredientRemoved}\r\n                    disabled={disabled} canPurchase={this.updateCanPurchase(this.props.ings)}/>\r\n                </Aux>\r\n            );\r\n            orderSummary = <Summary ingredients={this.props.ings} canceled={this.closeModalHandler}\r\n            continued={this.continuePurchaseHandler} price={this.props.price}/>;\r\n        }\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} closeModal={this.closeModalHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.burgerBuilderReducer.ingredients,\r\n        price: state.burgerBuilderReducer.totalPrice,\r\n        error: state.burgerBuilderReducer.error\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(burgerBuilderActions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(burgerBuilderActions.fetchIngredients()),\r\n        onInitPurchase: () => dispatch(burgerBuilderActions.purchaseInit())\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Builder,axios));"]},"metadata":{},"sourceType":"module"}