{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shi Yao Chu\\\\desktop\\\\webdev\\\\react\\\\burger-builder\\\\src\\\\containers\\\\checkout\\\\contactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport styles from './contactData.module.css';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/spinner/spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      address: {\n        street: '',\n        postal: ''\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      const ing = this.props.ings; //alert('you continue!');\n      //.json is for firebase only\n      //price should actually be calculated on the server\n      //this.setState({loading: true});\n\n      const order = {\n        ingredients: ing,\n        price: this.props.price,\n        customer: {\n          name: this.state.name,\n          address: this.state.address,\n          email: this.state.email\n        }\n      };\n      this.props.onOrderBurger(order);\n    };\n  }\n\n  render() {\n    let form = React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: styles.Input,\n      type: \"text\",\n      name: \"name\",\n      onChange: e => {\n        this.setState({\n          name: e.target.value\n        });\n      },\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"E-mail\"), React.createElement(\"input\", {\n      className: styles.Input,\n      type: \"email\",\n      name: \"email\",\n      onChange: e => {\n        this.setState({\n          email: e.target.value\n        });\n      },\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"Success\",\n      clicked: this.orderHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Order Here\"));\n\n    if (this.props.loading) {\n      form = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: styles.ContactData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Enter your data\"), form);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilderReducer.ingredients,\n    price: state.burgerBuilderReducer.totalPrice,\n    loading: state.order.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderBurger: data => dispatch(actions.purchaseBurger(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","map":{"version":3,"sources":["C:\\Users\\Shi Yao Chu\\desktop\\webdev\\react\\burger-builder\\src\\containers\\checkout\\contactData.js"],"names":["React","Component","Button","styles","axios","Spinner","withErrorHandler","connect","actions","ContactData","state","name","email","address","street","postal","loading","orderHandler","event","preventDefault","ing","props","ings","order","ingredients","price","customer","onOrderBurger","render","form","Input","e","setState","target","value","mapStateToProps","burgerBuilderReducer","totalPrice","mapDispatchToProps","dispatch","data","purchaseBurger"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\r\n\r\nimport Button from '../../components/UI/Button/Button';\r\nimport styles from './contactData.module.css';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/spinner/spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        address: {\r\n            street: '',\r\n            postal: ''\r\n        },\r\n        loading: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const ing = this.props.ings;\r\n\r\n        //alert('you continue!');\r\n        //.json is for firebase only\r\n        //price should actually be calculated on the server\r\n        //this.setState({loading: true});\r\n        const order = {\r\n            ingredients: ing,\r\n            price: this.props.price,\r\n            customer: {\r\n                name: this.state.name,\r\n                address: this.state.address,\r\n                email: this.state.email\r\n            }\r\n        }\r\n\r\n        this.props.onOrderBurger(order);\r\n\r\n    }\r\n\r\n    render(){\r\n        let form = (\r\n            <form>\r\n                <label>Name</label>\r\n                <input className={styles.Input} type='text' name='name' onChange={e => {\r\n                    this.setState({name: e.target.value})\r\n                }}\r\n                value={this.state.name}/>\r\n                <label for>E-mail</label>\r\n                <input className={styles.Input} type='email' name='email' onChange={e => {\r\n                    this.setState({email: e.target.value})\r\n                }}\r\n                value={this.state.email}/>\r\n                <Button type='Success' clicked={this.orderHandler}>Order Here</Button>\r\n            </form>\r\n        );\r\n        if(this.props.loading){\r\n            form = <Spinner/>\r\n        }\r\n        return (\r\n            <div className={styles.ContactData}>\r\n                <h4>Enter your data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.burgerBuilderReducer.ingredients,\r\n        price: state.burgerBuilderReducer.totalPrice,\r\n        loading: state.order.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onOrderBurger: (data) => dispatch(actions.purchaseBurger(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));"]},"metadata":{},"sourceType":"module"}